题目描述：
在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
输入：
输入可能包含多个测试样例，对于每个测试案例，
输入的第一行为两个整数m和n(1<=m,n<=1000)：代表将要输入的矩阵的行数和列数。
输入的第二行包括一个整数t(1<=t<=1000000)：代表要查找的数字。
接下来的m行，每行有n个数，代表题目所给出的m行n列的矩阵(矩阵如题目描述所示，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。
输出：
对应每个测试案例，
输出”Yes”代表在二维数组中找到了数字t。
输出”No”代表在二维数组中没有找到数字t。
样例输入：
3 3
5
1 2 3
4 5 6
7 8 9
3 3
1
2 3 4
5 6 7
8 9 10
3 3
12
2 3 4
5 6 7
8 9 10
样例输出：
Yes
No
No



#include <stdio.h>
#define N 1000
int input[N][N];
int m, n, num;

int IsExist(int arr, int cols)
{
    while (arr < n && cols >=0)
    {
        if (input[arr][cols] == num)
            return 1;
        else if (input[arr][cols] > num)
        {
            cols--;
        }
        else
        {
            arr++;
        }
    }
    return 0;
}
int main()
{
    //freopen("test.txt", "r", stdin);

    int i, j;

    while(scanf("%d%d", &n, &m) != EOF)
    {
        scanf("%d", &num);
        for (i = 0; i < n; i++)
            for (j = 0; j < m; j++)
            {
                scanf("%d", &input[i][j]);
            }
        if (IsExist(0, m-1))
            printf("Yes\n");
        else
            printf("No\n");
    }
    return 0;
}

/**************************************************************
Problem: 1384
User: lintingbin2009
Language: C
Result: Accepted
Time:690 ms
Memory:4820 kb
****************************************************************/
