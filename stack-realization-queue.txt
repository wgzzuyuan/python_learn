题目描述：
用两个栈来实现一个队列，完成队列的Push和Pop操作。
队列中的元素为int类型。
输入：
每个输入件包含一个测试样例。
对于每个测试样例，第一行输入一个n(1<=n<=100000)，代表队列操作的个数。
接下来的n行，每行输入一个队列操作：
1.	PUSH X 向队列中push一个整数x(x>=0)
2.	POP 从队列中pop一个数。
输出：
对应每个测试案例，打印所有pop操作中从队列pop中的数字。如果执行pop操作时，队列为空，则打印-1。
样例输入：
3
PUSH 10
POP
POP
样例输出：
10
-1



#include <stdio.h>
#include <string.h>
#define N 100000

int main()
{
    //freopen("test.txt", "r", stdin);
    int count, i, stack0[N], stack1[N], top0, top1;
    char opt[10];

    while (scanf("%d", &count) != EOF)
    {
        top0 = top1 = -1;
        for (i = 0; i < count; i++)
        {
            scanf("%s", opt);
            if (strcmp(opt, "PUSH") == 0)
            {
                scanf("%d", &stack0[++top0]);
            }
            else
            {
                if (top1 != -1)
                    printf("%d\n", stack1[top1--]);
                else if (top0 == -1)
                    printf("-1\n");
                else
                {
                    while(top0 != -1)
                        stack1[++top1] = stack0[top0--];
                    printf("%d\n", stack1[top1--]);
                }
            }
        }
    }
    return 0;
}

/**************************************************************
Problem: 1512
User: lintingbin2009
Language: C
Result: Accepted
Time:70 ms
Memory:1620 kb
 ****************************************************************/
